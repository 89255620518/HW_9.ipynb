# Игра гонки черепашки
'''
from turtle import *
from random import randint
from time import *

finish = 200 # Дистанция гонки

t1 = Turtle()        # Создали объект класса черепахи
t1.shape("turtle")   # поменяли форму объекта
t1.color("red")      # меняем цвет объекта
t1.penup()           # поднимаем черепашку, чтобы не рисовала
t1.goto(-200,20)     # перемешаем черепашку по координатам
t1.pendown()         # опускаем черепашку, чтобы потом рисовала
t1.speed(3)


t2 = Turtle()        # Создали объект класса черепахи
t2.shape("turtle")   # поменяли форму объекта
t2.color("blue")      # меняем цвет объекта
t2.penup()           # поднимаем черепашку, чтобы не рисовала
t2.goto(-200,-20)     # перемешаем черепашку по координатам
t2.pendown()         # опускаем черепашку, чтобы потом рисовала
t2.speed(3)

def razmetka():      # функция рисует разметку поля бега
    t = Turtle()
    t.speed(0)
    for i in range(1, 20):
        t.penup()
        t.goto(-200+i*20, 50)
        t.pendown()
        t.goto(-200+i*20, -100)
    t.hideturtle()

razmetka()

def catch1(x, y):        # Это обработчик события нажатия
    t1.write('Ouch!', font=('Arial', 14, 'normal'))   # Пишем на экране ауч
    t1.fd(randint(10,15))    #  Черепашка делает случайный шаг от 10 до 15

t1.onclick(catch1)   # здесь я прикрепляю обработчик к событию нажатия на 1 черепашку

def catch2(x, y):        # Это обработчик события нажатия
    t2.write('Мне больно', font=('Ariel', 14, 'normal')) # Пишем на экране Ауч
    t1.fd(randint(10,15))    #  Черепашка делает случайный шаг от 10 до 15

t2.onclick(catch2)     # здесь я прикрепляю обработчик к событию нажатия на 1 черепашку

while t1.xcor()<finish and t2.xcor()<finish:
    t1.forward(randint(2,5))  # здесь черепаха двигается вперед и рисует тоже на случайное число диапазоне от 2 до 7
    t2.forward(randint(2,5))
    sleep(0.05)
'''

# Задача
# Сделайте игру крестики - нолики, человек должен играть с ботом, поле 3*3.
# Конечно, бот не должен ходить на занятые поля
# Если есть желание, то можете наделить бота всевдоинтелектом.


# Создаем поле
'''
import pygame

pygame.init()
win = pygame.display.set_mode((500, 500)) # размеры
pygame.display.set_caption('Крестики и нолики') # название игры

run = True
while(run):
    for event in pygame.event.get():
        if event.type == pygame.QUIT:   # Если пользователь закрывает окно
            run = False
pygame.quit()                           # То мы останавливаем программу
'''


# # Задача
# Сделайте приложение "Калькулятор" аналогично встроенному в "Windows". Если будут силы
# то сделайте так переключение на режим инженерного расширенного режима.

# Задача
# Сделайте локальный чат-бот с внешним хранилищем. Тема чат-бота любая вам интересная.
'''
# Чат бот
import random
import json

dishes = ['яичница', 'суши', 'блинчики', 'пицца', 'сэндвич']
disheslen = len(dishes)

# Режим сохранение
def save():
    with open("dishes.json", "w", encoding = "utf-8") as cul_bot:
        cul_bot.write(json.dumps(dishes, ensure_ascii = False))
    print("Бот успешно сохранил вашу кулинарную библиотеку. Проверьте изменение в файле dishes.json")

# Режим загрузки данных
def load():
    with open("dishes.json", "r", encoding= "utf-8") as cul_bot:
        dishes = json.load(cul_bot)
    print("Бот успешно загрузил измененную библиотеку в файл dishes.json")

while True:
    command = input("Введите команду: ")  
    if command == '/start':
        print("Процесс запущен. Вас приветствует кулинарный бот!!!")
    elif command == '/finish':
        save()
        print("Работа кулинарного бота завершена. До новых встреч!!!")
        break
    elif command == '/info':
        print("Кулинарный бот может посоветовать вкучняшку. Используйте след. команды, чтобы воспользоваться им.")
        print("/start - для запуска бота,", end= ' ')
        print("/finish - для прекращение работы бота.")
        print("/info - для получения инфо о работе бота.", end= " ")
'''

# Задача
# Телефонный справочник






